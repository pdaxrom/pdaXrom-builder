--- pygtk-2.4.1/gtk/__init__.py~	2004-08-02 11:02:23.000000000 +0000
+++ pygtk-2.4.1/gtk/__init__.py	2004-12-06 21:04:01.000000000 +0000
@@ -56,19 +56,21 @@
 # _gobject deprecation
 from types import ModuleType as _module
 class _GObjectWrapper(_module):
-    from warnings import warn
-    warn = staticmethod(warn)
+# pyhton sucks
+#    from warnings import *
+#    warn = staticmethod(warn)
     _gobject = _gobject
     def __getattr__(self, attr):
-        self.warn('gtk._gobject is deprecated, use gobject directly instead')
+        print 'gtk._gobject is deprecated, use gobject directly instead'
         return getattr(self._gobject, attr)
 _gobject = _GObjectWrapper('gtk._gobject')
 del _GObjectWrapper, _module
 
 # other deprecated symbols
 class _Deprecated:
-    from warnings import warn
-    warn = staticmethod(warn)
+# pyhton sucks
+#    from warnings import *
+#    warn = staticmethod(warn)
     def __init__(self, func, oldname, module=''):
         self.func = func
         self.oldname = oldname
@@ -87,7 +89,7 @@
                                                                self.name)
         # DeprecationWarning is imported from _gtk, so it's not the same
         # as the one found in exceptions.
-        self.warn(message, DeprecationWarning)
+        print message, DeprecationWarning
         return self.func(*args, **kwargs)
 
 # old names compatibility ...
